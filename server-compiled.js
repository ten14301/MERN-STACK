(()=>{var e={860:e=>{"use strict";e.exports=require("express")},13:e=>{"use strict";e.exports=require("mongodb")}},s={};function t(n){var r=s[n];if(void 0!==r)return r.exports;var o=s[n]={exports:{}};return e[n](o,o.exports,t),o.exports}(()=>{const e=t(860),{MongoClient:s}=t(13),n=e();let r;function o(e,s,t){const n=e.headers.authorization;if(n){const e=n.split(" ")[1],o=Buffer.from(e,"base64").toString("utf-8"),[a,i]=o.split(":");r.collection("User").findOne({Username:a,Pass:i}).then((e=>{e?t():(console.log(n),s.status(401).send("Try again"))})).catch((e=>{console.log(e),s.status(500).send("Internal Server Error")}))}else s.set("WWW-Authenticate","Basic realm='Our MERN App'"),s.status(401).send("Authorization required")}n.set("view engine","ejs"),n.set("views","./views"),n.use(e.static("public")),n.use(e.json()),n.use(e.urlencoded({extended:!1})),n.get("/",(async(e,s)=>{const t=await r.collection("User").find().toArray();s.render("home",{allusers:t})})),n.use(o),n.get("/api/users",(async(e,s)=>{const t=await r.collection("User").find().toArray();s.json(t)})),n.post("/create-user",(async(e,s)=>{console.log(e.body),s.send("create")})),n.get("/admin",o,((e,s)=>{s.render("admin")})),async function(){const e=new s("mongodb://admin:admin@localhost:27017/Mern?&authSource=admin");await e.connect(),r=e.db(),n.listen(3e3)}()})()})();